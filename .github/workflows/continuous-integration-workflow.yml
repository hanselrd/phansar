name: Continuous Integration

on: [push, pull_request]

jobs:
    build:
        name: "[${{ matrix.build_type }}] ${{ matrix.compiler.name }}"
        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
                build_type: ["Debug", "Release", "RelWithDebInfo", "MinSizeRel"]
                compiler:
                  - { name: "GCC", cc: "gcc", cxx: "g++" }
                  - { name: "Clang", cc: "clang", cxx: "clang++" }

        steps:
        - uses: actions/checkout@v1
        - name: Set up system
          run: |
            sudo add-apt-repository ppa:ubuntu-toolchain-r/test
            sudo apt update
            sudo apt install -y wget build-essential cmake ninja-build gcc-9 g++-9
            pip install --user wheel
            pip3 install --user wheel cmake-format
            wget "https://releases.llvm.org/9.0.0/clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz"
            tar xf clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz
            sudo cp -R ./clang+llvm-9.0.0-x86_64-linux-gnu-ubuntu-18.04/* /usr/local
            sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 --slave /usr/bin/g++ g++ /usr/bin/g++-9 --slave /usr/bin/gcov gcov /usr/bin/gcov-9
            sudo apt install -y libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev
        - name: Configure build
          run: |
            cmake -G"Ninja" -H. -Bbuild -DCMAKE_C_COMPILER=${{ matrix.compiler.cc }} -DCMAKE_CXX_COMPILER=${{ matrix.compiler.cxx }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_EXPORT_COMPILE_COMMANDS=YES
            ln -sf build/compile_commands.json .
        - name: Check build formatting
          working-directory: ./utils
          run: |
            export PATH=$(python3 -m site --user-base)/bin:$(python -m site --user-base)/bin:$PATH
            echo $PATH
            ./cmake-format.bash check
        - name: Check include guards
          working-directory: ./utils
          run: |
            ./include-guards.bash check
        - name: Check test cases
          working-directory: ./utils
          run: |
            ./test-cases.bash check
        - name: Check code formatting
          working-directory: ./utils
          run: |
            ./clang-format.bash check
        - name: Check static analysis
          working-directory: ./utils
          run: |
            ./clang-tidy.bash check
        - name: Run build
          working-directory: ./build
          run: |
            cmake --build .
        - name: Run tests
          working-directory: ./build
          run: |
            ctest -VV --timeout 30
