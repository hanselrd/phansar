name: Continuous Integration

on: [push, pull_request]

jobs:
    build:
        name: ${{ matrix.name }}
        runs-on: ubuntu-latest

        strategy:
            matrix:
                name: [gcc, clang]

                include:
                    - name: gcc
                      c_compiler: gcc
                      cxx_compiler: g++

                    - name: clang
                      c_compiler: clang
                      cxx_compiler: clang++

        steps:
        - uses: actions/checkout@v2

        - uses: actions/cache@v2
          with:
            path: |
                ${{ github.workspace }}/.cache
            key: ${{ runner.os }}-${{ matrix.name }}-${{ github.sha }}
            restore-keys: |
                ${{ runner.os }}-${{ matrix.name }}-
                ${{ runner.os }}-

        - name: Build container
          shell: bash
          run: |
              docker-compose build
          env:
              CMAKE_C_COMPILER: ${{ matrix.c_compiler }}
              CMAKE_CXX_COMPILER: ${{ matrix.cxx_compiler }}

        - name: Check formatting
          shell: bash
          run: |
              docker-compose run check_format

        - name: Build and test Debug
          shell: bash
          run: |
              docker-compose run debug_test

        - name: Build and test Release
          shell: bash
          run: |
              docker-compose run release_test

        - name: Build and test RelWithDebInfo
          shell: bash
          run: |
              docker-compose run relwithdebinfo_test

        - name: Build and test MinSizeRel
          shell: bash
          run: |
              docker-compose run minsizerel_test
